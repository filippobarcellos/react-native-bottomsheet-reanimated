{"version":3,"names":["React","useState","useRef","forwardRef","useImperativeHandle","useEffect","useMemo","View","StyleSheet","Dimensions","Keyboard","Interactable","TapGestureHandler","useKeyboard","normalize","getSnapPoints","getInitialPosition","getOverDragBoundries","getNormalizeSnaps","OFFSET","Screen","width","get","height","Index","_ref","ref","_body$props","isBackDropDismissByPress","initialPosition","y","onChangeSnap","onChangeKeyboardAwareSnap","snapPoints","bottomSheerColor","backDropColor","isRoundBorderWithTipHeader","tipHeaderRadius","header","body","isBackDrop","isModal","dragEnabled","isAnimatedYFromParent","animatedValueY","containerStyle","bodyContainerStyle","tipStyle","headerStyle","bodyStyle","onClose","bounce","keyboardAware","keyboardAwareExtraSnapHeight","keyboardAwareDrag","overDrag","keyboardHeight","headerHeight","setHeaderHeight","currentSnap","setCurrentSnap","currentNomalizeSnap","normalizeSnap","bottomPanel","_snapPoints","boundaries","top","_initialPosition","isDismissWithPress","isBottomSheetDismissed","setIsBottomSheetDismissed","onDrawerSnap","snap","index","nativeEvent","value","dismissBottomSheet","findIndex","x","current","snapTo","dismiss","currentSnapHeight","newSnapHeight","snapToPosition","previousSnap","nextSnap","dragHandler","createElement","style","styles","panelContainer","pointerEvents","verticalOnly","onSnap","enabled","onActivated","marginTop","modal","panel","backgroundColor","shadowColor","shadowOffset","shadowRadius","shadowOpacity","borderTopLeftRadius","borderTopRightRadius","panelHandle","panelHeader","onLayout","e","layout","cloneElement","props","create","container","flex","position","alignSelf","borderRadius","marginVertical","padding","bottom","left","right"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n  useEffect,\n  useMemo,\n} from 'react';\n\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  Keyboard,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport Animated, { Extrapolate } from 'react-native-reanimated';\nimport Interactable from 'react-native-interactable-reanimated';\nimport { TapGestureHandler } from 'react-native-gesture-handler';\nimport { useKeyboard } from './Hooks';\nimport {\n  normalize,\n  getSnapPoints,\n  getInitialPosition,\n  getOverDragBoundries,\n  getNormalizeSnaps,\n} from './utils';\nconst OFFSET = 15;\nconst Screen = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\ntype BottomSheetProps = {\n  /**\n   * enable to move bottomsheet to first snappoint by pressing backdrop.\n   * @default false\n   */\n  isBackDropDismissByPress?: boolean;\n  /**\n   * determines initial position point of bottom sheet. The value outside of snap points.\n   */\n  initialPosition: object | any;\n  /**\n   * method call when change any snap.\n   */\n  onChangeSnap?: (data: object) => void;\n  /**\n   * when keyboardAware=true then it give keyboard awareview snap. onChangeKeyboardAwareSnap: (previousSnap: number,nextSnap: number,keyboardHeight: number) => void;\n   */\n  onChangeKeyboardAwareSnap?: (data: object) => void;\n  /**\n   * e.g. [300, 200, 0]. Points for snapping of bottom sheet coomponent. They define distance from bottom of the screen. Might be number or percent (as string e.g. '20%') for points or percents of screen height from bottom. Note: Array values must be in descending order.\n   */\n  snapPoints: (string | number)[];\n  /**\n   * for background color of bottom sheet.\n   * @default \"#ffffff\"\n   */\n  bottomSheerColor?: string;\n  /**\n   * for background color of the back drop.\n   */\n  backDropColor?: string;\n  /**\n   * give round with tip header style to bottomsheet.\n   * @default false\n   */\n  isRoundBorderWithTipHeader?: boolean;\n  /**\n   * for tip header border radius.\n   * @default 12\n   */\n  tipHeaderRadius?: number;\n  /**\n   * method for rendering non-scrollable header of bottom sheet.\n   */\n  header?: React.ReactNode;\n  /**\n   * Method for rendering scrollable content of bottom sheet.\n   */\n  body: React.ReactNode | any;\n  /**\n   * for show backdrop behind the bottom sheet.\n   * @default false\n   */\n  isBackDrop?: boolean;\n  /**\n   * to make bottom sheet like modal.\n   * @default false\n   */\n  isModal?: boolean;\n  /**\n   * for enable/disable drag.\n   * @default true\n   */\n  dragEnabled?: boolean;\n  /**\n   * if true then give animated value to animatedValueY props.\n   */\n  isAnimatedYFromParent?: boolean;\n  /**\n   * if isAnimatedYFromParent will be true then it will give animtedY value to animatedValueY props.\n   */\n  animatedValueY?: any;\n  /**\n   * for change style of container.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of body container.\n   */\n  bodyContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of tip. it is dependted on isRoundBorderWithTipHeader.\n   */\n  tipStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of header.\n   */\n  headerStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of body.\n   */\n  bodyStyle?: StyleProp<ViewStyle>;\n  /**\n   * method call when bottomsheet close.\n   */\n  onClose?: () => void;\n  /**\n   * for increase or decrease bounce effect.\n   * @default 0.5\n   */\n  bounce?: number;\n  /**\n   * true will avoid current snap when keyboard will open.\n   * @default false\n   */\n  keyboardAware?: boolean;\n  /**\n   * when keyboardAware=true and this is for adding extra space in snap when keyboard open\n   * @default 0\n   */\n  keyboardAwareExtraSnapHeight?: number;\n  /**\n   * when keyboardAware=true and this is used for enable or disable drag when keyboard open\n   * @default false\n   */\n  keyboardAwareDrag?: boolean;\n  /**\n   * false will disable overdrag of last snap, false will also disable bounce' and isModal`.\n   * @default true\n   */\n  overDrag?: boolean;\n};\nconst Index = forwardRef(\n  (\n    {\n      isBackDropDismissByPress,\n      initialPosition = { y: 0 },\n      onChangeSnap,\n      onChangeKeyboardAwareSnap,\n      snapPoints,\n      bottomSheerColor = '#FFFFFF',\n      backDropColor = '#000000',\n      isRoundBorderWithTipHeader = false,\n      tipHeaderRadius = 12,\n      header,\n      body,\n      isBackDrop = false,\n      isModal,\n      dragEnabled = true,\n      isAnimatedYFromParent,\n      animatedValueY,\n      containerStyle,\n      bodyContainerStyle = {},\n      tipStyle,\n      headerStyle,\n      bodyStyle,\n      onClose,\n      bounce = 0.5,\n      keyboardAware = false,\n      keyboardAwareExtraSnapHeight = 0,\n      keyboardAwareDrag = false,\n      overDrag = true,\n    }: BottomSheetProps,\n    ref\n  ) => {\n    const [keyboardHeight] = useKeyboard(keyboardAware);\n    const [headerHeight, setHeaderHeight] = useState(0);\n    const [currentSnap, setCurrentSnap] = useState(initialPosition);\n    const currentNomalizeSnap = useMemo(() => normalize(currentSnap), [\n      currentSnap,\n    ]);\n    const normalizeSnap = useMemo(() => getNormalizeSnaps(snapPoints), [\n      snapPoints,\n    ]);\n    // const [_deltaY] = useState(new Animated.Value(Screen.height));\n    const bottomPanel = useRef<any>();\n    const _snapPoints = useMemo(() => getSnapPoints(normalizeSnap), [\n      normalizeSnap,\n    ]);\n    const boundaries = useMemo(\n      () =>\n        overDrag\n          ? { top: isModal ? 0 : -300, bounce: bounce }\n          : getOverDragBoundries(normalizeSnap),\n      [overDrag, isModal, bounce, normalizeSnap]\n    );\n    const _initialPosition = useMemo(\n      () => getInitialPosition(initialPosition),\n      [initialPosition]\n    );\n    const isDismissWithPress = isBackDropDismissByPress\n      ? isBackDropDismissByPress\n      : false;\n    const [\n      isBottomSheetDismissed,\n      setIsBottomSheetDismissed,\n    ] = useState<boolean>(initialPosition === 0 || initialPosition === '0%');\n\n    const onDrawerSnap = (snap: any) => {\n      const index = snap.nativeEvent.index;\n      const value = snapPoints[index];\n      setCurrentSnap(value); //\n      if (value === 0 || value === '0%') {\n        setIsBottomSheetDismissed(true);\n        onClose && onClose();\n      } else {\n        setIsBottomSheetDismissed(false);\n      }\n      onChangeSnap && onChangeSnap({ index, value });\n    };\n\n    const dismissBottomSheet = () => {\n      let index = snapPoints.findIndex(\n        (x: number | string) => x === 0 || x === '0%'\n      );\n      if (index !== -1) {\n        bottomPanel.current.snapTo({ index });\n        onClose && onClose();\n      }\n      Keyboard.dismiss();\n    };\n\n    const snapTo = (index: number) => {\n      if (snapPoints.findIndex((x) => x === 0 || x === '0%') !== -1) {\n        Keyboard.dismiss();\n      }\n      bottomPanel.current.snapTo({ index });\n      const value = snapPoints[index];\n      onChangeSnap && onChangeSnap({ index, value });\n    };\n\n    useImperativeHandle(ref, () => ({\n      snapTo,\n      dismissBottomSheet,\n    }));\n\n    useEffect(() => {\n      if (keyboardAware) {\n        const currentSnapHeight = normalize(currentSnap);\n        if (keyboardHeight) {\n          const newSnapHeight = currentSnapHeight + keyboardHeight;\n          if (newSnapHeight > Screen.height) {\n            bottomPanel.current.snapToPosition({\n              x: 0,\n              y: 0 - keyboardAwareExtraSnapHeight,\n            });\n            onChangeKeyboardAwareSnap &&\n              onChangeKeyboardAwareSnap({\n                previousSnap: currentSnapHeight,\n                nextSnap: 0,\n                keyboardHeight,\n              });\n          } else {\n            bottomPanel.current.snapToPosition({\n              x: 0,\n              y: Screen.height - newSnapHeight - keyboardAwareExtraSnapHeight,\n            });\n            onChangeKeyboardAwareSnap &&\n              onChangeKeyboardAwareSnap({\n                previousSnap: currentSnapHeight,\n                nextSnap: newSnapHeight,\n                keyboardHeight,\n              });\n          }\n        } else {\n          bottomPanel.current.snapToPosition({\n            x: 0,\n            y: Screen.height - currentSnapHeight,\n          });\n        }\n      }\n    }, [keyboardHeight]);\n\n    const dragHandler = () => {\n      if (dragEnabled) {\n        if (!keyboardAwareDrag && keyboardHeight > 0) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return (\n      <View style={styles.panelContainer} pointerEvents={'box-none'}>\n        {/* Backdrop */}\n        {/* {isBackDrop && (\n          <Animated.View\n            pointerEvents={!isBottomSheetDismissed ? 'auto' : 'box-none'}\n            style={[\n              styles.panelContainer,\n              {\n                backgroundColor: backDropColor,\n                opacity: isAnimatedYFromParent\n                  ? animatedValueY.interpolate({\n                      inputRange: [0, Screen.height - 100],\n                      outputRange: [1, 0],\n                      extrapolateRight: Extrapolate.CLAMP,\n                    })\n                  : _deltaY.interpolate({\n                      inputRange: [0, Screen.height - 100],\n                      outputRange: [1, 0],\n                      extrapolateRight: Extrapolate.CLAMP,\n                    }),\n              },\n            ]}\n          />\n        )} */}\n\n        <Interactable.View\n          dragEnabled={isModal ? false : dragHandler()}\n          verticalOnly={true}\n          ref={bottomPanel}\n          snapPoints={_snapPoints}\n          initialPosition={_initialPosition}\n          boundaries={boundaries}\n          animatedValueY={isAnimatedYFromParent ? animatedValueY : 0}\n          onSnap={onDrawerSnap}\n        >\n          {!isModal && isDismissWithPress && !isBottomSheetDismissed && (\n            <TapGestureHandler\n              enabled={isBackDrop}\n              onActivated={dismissBottomSheet}\n            >\n              <View\n                style={{\n                  height: Screen.height,\n                  marginTop: -Screen.height,\n                }}\n              />\n            </TapGestureHandler>\n          )}\n\n          <View\n            style={[\n              isModal ? styles.modal : styles.panel,\n              { backgroundColor: bottomSheerColor },\n              isRoundBorderWithTipHeader\n                ? [\n                    {\n                      backgroundColor: '#FFFFFF',\n                      shadowColor: '#000000',\n                      shadowOffset: { width: 0, height: 0 },\n                      shadowRadius: 5,\n                      shadowOpacity: 0.4,\n                    },\n                    {\n                      borderTopLeftRadius: tipHeaderRadius,\n                      borderTopRightRadius: tipHeaderRadius,\n                    },\n                  ]\n                : {},\n              containerStyle,\n            ]}\n          >\n            <View\n              style={[\n                isModal ? styles.modal : styles.panel,\n                bodyContainerStyle,\n              ]}\n            >\n              {!isModal && isRoundBorderWithTipHeader && (\n                <View style={[styles.panelHandle, tipStyle]} />\n              )}\n              {!isModal && (\n                <View\n                  style={[styles.panelHeader, headerStyle]}\n                  onLayout={(e) => setHeaderHeight(e.nativeEvent.layout.height)}\n                >\n                  {header}\n                </View>\n              )}\n              <View style={bodyStyle}>\n                {React.cloneElement(body, {\n                  style: {\n                    ...body?.props?.style,\n                    height: currentNomalizeSnap - headerHeight + OFFSET,\n                  },\n                })}\n              </View>\n            </View>\n          </View>\n        </Interactable.View>\n      </View>\n    );\n  }\n);\n\nexport default Index;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  panelHandle: {\n    position: 'absolute',\n    alignSelf: 'center',\n    width: 40,\n    height: 6,\n    borderRadius: 4,\n    backgroundColor: '#00000040',\n    marginVertical: 8,\n  },\n  panel: {\n    height: Screen.height + 300,\n  },\n  modal: {\n    height: Screen.height + 300,\n  },\n  panelHeader: {\n    padding: 16,\n  },\n  panelContainer: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"}