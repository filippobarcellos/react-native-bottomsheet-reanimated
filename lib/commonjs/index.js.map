{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeInteractableReanimated","_interopRequireDefault","_reactNativeGestureHandler","_Hooks","_utils","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","OFFSET","Screen","width","Dimensions","height","Index","forwardRef","_ref","ref","_body$props","isBackDropDismissByPress","initialPosition","y","onChangeSnap","onChangeKeyboardAwareSnap","snapPoints","bottomSheerColor","backDropColor","isRoundBorderWithTipHeader","tipHeaderRadius","header","body","isBackDrop","isModal","dragEnabled","isAnimatedYFromParent","animatedValueY","containerStyle","bodyContainerStyle","tipStyle","headerStyle","bodyStyle","onClose","bounce","keyboardAware","keyboardAwareExtraSnapHeight","keyboardAwareDrag","overDrag","keyboardHeight","useKeyboard","headerHeight","setHeaderHeight","useState","currentSnap","setCurrentSnap","currentNomalizeSnap","useMemo","normalize","normalizeSnap","getNormalizeSnaps","bottomPanel","useRef","_snapPoints","getSnapPoints","boundaries","top","getOverDragBoundries","_initialPosition","getInitialPosition","isDismissWithPress","isBottomSheetDismissed","setIsBottomSheetDismissed","onDrawerSnap","snap","index","nativeEvent","value","dismissBottomSheet","findIndex","x","current","snapTo","Keyboard","dismiss","useImperativeHandle","useEffect","currentSnapHeight","newSnapHeight","snapToPosition","previousSnap","nextSnap","dragHandler","createElement","View","style","styles","panelContainer","pointerEvents","verticalOnly","onSnap","TapGestureHandler","enabled","onActivated","marginTop","modal","panel","backgroundColor","shadowColor","shadowOffset","shadowRadius","shadowOpacity","borderTopLeftRadius","borderTopRightRadius","panelHandle","panelHeader","onLayout","e","layout","React","cloneElement","props","_default","exports","StyleSheet","create","container","flex","position","alignSelf","borderRadius","marginVertical","padding","bottom","left","right"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n  useEffect,\n  useMemo,\n} from 'react';\n\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  Keyboard,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport Animated, { Extrapolate } from 'react-native-reanimated';\nimport Interactable from 'react-native-interactable-reanimated';\nimport { TapGestureHandler } from 'react-native-gesture-handler';\nimport { useKeyboard } from './Hooks';\nimport {\n  normalize,\n  getSnapPoints,\n  getInitialPosition,\n  getOverDragBoundries,\n  getNormalizeSnaps,\n} from './utils';\nconst OFFSET = 15;\nconst Screen = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\ntype BottomSheetProps = {\n  /**\n   * enable to move bottomsheet to first snappoint by pressing backdrop.\n   * @default false\n   */\n  isBackDropDismissByPress?: boolean;\n  /**\n   * determines initial position point of bottom sheet. The value outside of snap points.\n   */\n  initialPosition: object | any;\n  /**\n   * method call when change any snap.\n   */\n  onChangeSnap?: (data: object) => void;\n  /**\n   * when keyboardAware=true then it give keyboard awareview snap. onChangeKeyboardAwareSnap: (previousSnap: number,nextSnap: number,keyboardHeight: number) => void;\n   */\n  onChangeKeyboardAwareSnap?: (data: object) => void;\n  /**\n   * e.g. [300, 200, 0]. Points for snapping of bottom sheet coomponent. They define distance from bottom of the screen. Might be number or percent (as string e.g. '20%') for points or percents of screen height from bottom. Note: Array values must be in descending order.\n   */\n  snapPoints: (string | number)[];\n  /**\n   * for background color of bottom sheet.\n   * @default \"#ffffff\"\n   */\n  bottomSheerColor?: string;\n  /**\n   * for background color of the back drop.\n   */\n  backDropColor?: string;\n  /**\n   * give round with tip header style to bottomsheet.\n   * @default false\n   */\n  isRoundBorderWithTipHeader?: boolean;\n  /**\n   * for tip header border radius.\n   * @default 12\n   */\n  tipHeaderRadius?: number;\n  /**\n   * method for rendering non-scrollable header of bottom sheet.\n   */\n  header?: React.ReactNode;\n  /**\n   * Method for rendering scrollable content of bottom sheet.\n   */\n  body: React.ReactNode | any;\n  /**\n   * for show backdrop behind the bottom sheet.\n   * @default false\n   */\n  isBackDrop?: boolean;\n  /**\n   * to make bottom sheet like modal.\n   * @default false\n   */\n  isModal?: boolean;\n  /**\n   * for enable/disable drag.\n   * @default true\n   */\n  dragEnabled?: boolean;\n  /**\n   * if true then give animated value to animatedValueY props.\n   */\n  isAnimatedYFromParent?: boolean;\n  /**\n   * if isAnimatedYFromParent will be true then it will give animtedY value to animatedValueY props.\n   */\n  animatedValueY?: any;\n  /**\n   * for change style of container.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of body container.\n   */\n  bodyContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of tip. it is dependted on isRoundBorderWithTipHeader.\n   */\n  tipStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of header.\n   */\n  headerStyle?: StyleProp<ViewStyle>;\n  /**\n   * for change style of body.\n   */\n  bodyStyle?: StyleProp<ViewStyle>;\n  /**\n   * method call when bottomsheet close.\n   */\n  onClose?: () => void;\n  /**\n   * for increase or decrease bounce effect.\n   * @default 0.5\n   */\n  bounce?: number;\n  /**\n   * true will avoid current snap when keyboard will open.\n   * @default false\n   */\n  keyboardAware?: boolean;\n  /**\n   * when keyboardAware=true and this is for adding extra space in snap when keyboard open\n   * @default 0\n   */\n  keyboardAwareExtraSnapHeight?: number;\n  /**\n   * when keyboardAware=true and this is used for enable or disable drag when keyboard open\n   * @default false\n   */\n  keyboardAwareDrag?: boolean;\n  /**\n   * false will disable overdrag of last snap, false will also disable bounce' and isModal`.\n   * @default true\n   */\n  overDrag?: boolean;\n};\nconst Index = forwardRef(\n  (\n    {\n      isBackDropDismissByPress,\n      initialPosition = { y: 0 },\n      onChangeSnap,\n      onChangeKeyboardAwareSnap,\n      snapPoints,\n      bottomSheerColor = '#FFFFFF',\n      backDropColor = '#000000',\n      isRoundBorderWithTipHeader = false,\n      tipHeaderRadius = 12,\n      header,\n      body,\n      isBackDrop = false,\n      isModal,\n      dragEnabled = true,\n      isAnimatedYFromParent,\n      animatedValueY,\n      containerStyle,\n      bodyContainerStyle = {},\n      tipStyle,\n      headerStyle,\n      bodyStyle,\n      onClose,\n      bounce = 0.5,\n      keyboardAware = false,\n      keyboardAwareExtraSnapHeight = 0,\n      keyboardAwareDrag = false,\n      overDrag = true,\n    }: BottomSheetProps,\n    ref\n  ) => {\n    const [keyboardHeight] = useKeyboard(keyboardAware);\n    const [headerHeight, setHeaderHeight] = useState(0);\n    const [currentSnap, setCurrentSnap] = useState(initialPosition);\n    const currentNomalizeSnap = useMemo(() => normalize(currentSnap), [\n      currentSnap,\n    ]);\n    const normalizeSnap = useMemo(() => getNormalizeSnaps(snapPoints), [\n      snapPoints,\n    ]);\n    // const [_deltaY] = useState(new Animated.Value(Screen.height));\n    const bottomPanel = useRef<any>();\n    const _snapPoints = useMemo(() => getSnapPoints(normalizeSnap), [\n      normalizeSnap,\n    ]);\n    const boundaries = useMemo(\n      () =>\n        overDrag\n          ? { top: isModal ? 0 : -300, bounce: bounce }\n          : getOverDragBoundries(normalizeSnap),\n      [overDrag, isModal, bounce, normalizeSnap]\n    );\n    const _initialPosition = useMemo(\n      () => getInitialPosition(initialPosition),\n      [initialPosition]\n    );\n    const isDismissWithPress = isBackDropDismissByPress\n      ? isBackDropDismissByPress\n      : false;\n    const [\n      isBottomSheetDismissed,\n      setIsBottomSheetDismissed,\n    ] = useState<boolean>(initialPosition === 0 || initialPosition === '0%');\n\n    const onDrawerSnap = (snap: any) => {\n      const index = snap.nativeEvent.index;\n      const value = snapPoints[index];\n      setCurrentSnap(value); //\n      if (value === 0 || value === '0%') {\n        setIsBottomSheetDismissed(true);\n        onClose && onClose();\n      } else {\n        setIsBottomSheetDismissed(false);\n      }\n      onChangeSnap && onChangeSnap({ index, value });\n    };\n\n    const dismissBottomSheet = () => {\n      let index = snapPoints.findIndex(\n        (x: number | string) => x === 0 || x === '0%'\n      );\n      if (index !== -1) {\n        bottomPanel.current.snapTo({ index });\n        onClose && onClose();\n      }\n      Keyboard.dismiss();\n    };\n\n    const snapTo = (index: number) => {\n      if (snapPoints.findIndex((x) => x === 0 || x === '0%') !== -1) {\n        Keyboard.dismiss();\n      }\n      bottomPanel.current.snapTo({ index });\n      const value = snapPoints[index];\n      onChangeSnap && onChangeSnap({ index, value });\n    };\n\n    useImperativeHandle(ref, () => ({\n      snapTo,\n      dismissBottomSheet,\n    }));\n\n    useEffect(() => {\n      if (keyboardAware) {\n        const currentSnapHeight = normalize(currentSnap);\n        if (keyboardHeight) {\n          const newSnapHeight = currentSnapHeight + keyboardHeight;\n          if (newSnapHeight > Screen.height) {\n            bottomPanel.current.snapToPosition({\n              x: 0,\n              y: 0 - keyboardAwareExtraSnapHeight,\n            });\n            onChangeKeyboardAwareSnap &&\n              onChangeKeyboardAwareSnap({\n                previousSnap: currentSnapHeight,\n                nextSnap: 0,\n                keyboardHeight,\n              });\n          } else {\n            bottomPanel.current.snapToPosition({\n              x: 0,\n              y: Screen.height - newSnapHeight - keyboardAwareExtraSnapHeight,\n            });\n            onChangeKeyboardAwareSnap &&\n              onChangeKeyboardAwareSnap({\n                previousSnap: currentSnapHeight,\n                nextSnap: newSnapHeight,\n                keyboardHeight,\n              });\n          }\n        } else {\n          bottomPanel.current.snapToPosition({\n            x: 0,\n            y: Screen.height - currentSnapHeight,\n          });\n        }\n      }\n    }, [keyboardHeight]);\n\n    const dragHandler = () => {\n      if (dragEnabled) {\n        if (!keyboardAwareDrag && keyboardHeight > 0) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return (\n      <View style={styles.panelContainer} pointerEvents={'box-none'}>\n        {/* Backdrop */}\n        {/* {isBackDrop && (\n          <Animated.View\n            pointerEvents={!isBottomSheetDismissed ? 'auto' : 'box-none'}\n            style={[\n              styles.panelContainer,\n              {\n                backgroundColor: backDropColor,\n                opacity: isAnimatedYFromParent\n                  ? animatedValueY.interpolate({\n                      inputRange: [0, Screen.height - 100],\n                      outputRange: [1, 0],\n                      extrapolateRight: Extrapolate.CLAMP,\n                    })\n                  : _deltaY.interpolate({\n                      inputRange: [0, Screen.height - 100],\n                      outputRange: [1, 0],\n                      extrapolateRight: Extrapolate.CLAMP,\n                    }),\n              },\n            ]}\n          />\n        )} */}\n\n        <Interactable.View\n          dragEnabled={isModal ? false : dragHandler()}\n          verticalOnly={true}\n          ref={bottomPanel}\n          snapPoints={_snapPoints}\n          initialPosition={_initialPosition}\n          boundaries={boundaries}\n          animatedValueY={isAnimatedYFromParent ? animatedValueY : 0}\n          onSnap={onDrawerSnap}\n        >\n          {!isModal && isDismissWithPress && !isBottomSheetDismissed && (\n            <TapGestureHandler\n              enabled={isBackDrop}\n              onActivated={dismissBottomSheet}\n            >\n              <View\n                style={{\n                  height: Screen.height,\n                  marginTop: -Screen.height,\n                }}\n              />\n            </TapGestureHandler>\n          )}\n\n          <View\n            style={[\n              isModal ? styles.modal : styles.panel,\n              { backgroundColor: bottomSheerColor },\n              isRoundBorderWithTipHeader\n                ? [\n                    {\n                      backgroundColor: '#FFFFFF',\n                      shadowColor: '#000000',\n                      shadowOffset: { width: 0, height: 0 },\n                      shadowRadius: 5,\n                      shadowOpacity: 0.4,\n                    },\n                    {\n                      borderTopLeftRadius: tipHeaderRadius,\n                      borderTopRightRadius: tipHeaderRadius,\n                    },\n                  ]\n                : {},\n              containerStyle,\n            ]}\n          >\n            <View\n              style={[\n                isModal ? styles.modal : styles.panel,\n                bodyContainerStyle,\n              ]}\n            >\n              {!isModal && isRoundBorderWithTipHeader && (\n                <View style={[styles.panelHandle, tipStyle]} />\n              )}\n              {!isModal && (\n                <View\n                  style={[styles.panelHeader, headerStyle]}\n                  onLayout={(e) => setHeaderHeight(e.nativeEvent.layout.height)}\n                >\n                  {header}\n                </View>\n              )}\n              <View style={bodyStyle}>\n                {React.cloneElement(body, {\n                  style: {\n                    ...body?.props?.style,\n                    height: currentNomalizeSnap - headerHeight + OFFSET,\n                  },\n                })}\n              </View>\n            </View>\n          </View>\n        </Interactable.View>\n      </View>\n    );\n  }\n);\n\nexport default Index;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  panelHandle: {\n    position: 'absolute',\n    alignSelf: 'center',\n    width: 40,\n    height: 6,\n    borderRadius: 4,\n    backgroundColor: '#00000040',\n    marginVertical: 8,\n  },\n  panel: {\n    height: Screen.height + 300,\n  },\n  modal: {\n    height: Screen.height + 300,\n  },\n  panelHeader: {\n    padding: 16,\n  },\n  panelContainer: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"}